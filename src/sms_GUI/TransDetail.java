/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sms_GUI;

import dbconnection.dbconnection2;
import java.awt.Container;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dulan
 */
public class TransDetail extends javax.swing.JInternalFrame {

    
    
    /**
     * Creates new form About
     */
    String sql,sql1,sql3;
    PreparedStatement ps,ps1,ps2;
    ResultSet rs,rs1,rs2;
    int a,b,c,d,i=2019,p=01,o=01;
    DefaultTableModel dtm = new DefaultTableModel();
    DefaultComboBoxModel dbm = new DefaultComboBoxModel();
    DefaultComboBoxModel dbm1 = new DefaultComboBoxModel();
    DefaultComboBoxModel dbm2 = new DefaultComboBoxModel();
    
    public TransDetail() {
        initComponents();
        showTableDefault();
        yearCBN.setModel(dbm);
        while(i<2050){
            dbm.addElement(i);
            i++;
        }
        monCBN.setModel(dbm1);
        while(p<13){
            dbm1.addElement(p);
            p++;
        }
        dayCBN.setModel(dbm2);
        while(o<32){
            dbm2.addElement(o);
            o++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        seTF = new javax.swing.JTextField();
        yearCBN = new javax.swing.JComboBox<>();
        monCBN = new javax.swing.JComboBox<>();
        dayCBN = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Transaction Details");
        setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        seTF.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        seTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                seTFKeyReleased(evt);
            }
        });

        yearCBN.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        yearCBN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        yearCBN.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yearCBNItemStateChanged(evt);
            }
        });
        yearCBN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yearCBNMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                yearCBNMouseReleased(evt);
            }
        });

        monCBN.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        monCBN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        monCBN.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                monCBNItemStateChanged(evt);
            }
        });
        monCBN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monCBNMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                monCBNMouseReleased(evt);
            }
        });

        dayCBN.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        dayCBN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dayCBN.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dayCBNItemStateChanged(evt);
            }
        });
        dayCBN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dayCBNMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dayCBNMouseReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Transaction Detail");

        jLabel2.setText("Search bar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(seTF, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(yearCBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(monCBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(dayCBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearCBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monCBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayCBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seTFKeyReleased
        search();
    }//GEN-LAST:event_seTFKeyReleased

    private void yearCBNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearCBNMouseClicked
       // filter();
    }//GEN-LAST:event_yearCBNMouseClicked

    private void monCBNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monCBNMouseClicked
        //filter();
    }//GEN-LAST:event_monCBNMouseClicked

    private void dayCBNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dayCBNMouseClicked
        //filter();
    }//GEN-LAST:event_dayCBNMouseClicked

    private void yearCBNMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearCBNMouseReleased
        //filter();
    }//GEN-LAST:event_yearCBNMouseReleased

    private void monCBNMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monCBNMouseReleased
        //filter();
    }//GEN-LAST:event_monCBNMouseReleased

    private void dayCBNMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dayCBNMouseReleased
        //filter();
    }//GEN-LAST:event_dayCBNMouseReleased

    private void dayCBNItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dayCBNItemStateChanged
        filter();
    }//GEN-LAST:event_dayCBNItemStateChanged

    private void monCBNItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_monCBNItemStateChanged
        filter();
    }//GEN-LAST:event_monCBNItemStateChanged

    private void yearCBNItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearCBNItemStateChanged
        filter();
    }//GEN-LAST:event_yearCBNItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dayCBN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> monCBN;
    private javax.swing.JTextField seTF;
    private javax.swing.JComboBox<String> yearCBN;
    // End of variables declaration//GEN-END:variables

    private void showTableDefault(){
        try{
            dtm.setColumnCount(6);
            jTable1.getTableHeader().getColumnModel().getColumn(0).setHeaderValue("TranID");
            jTable1.getTableHeader().getColumnModel().getColumn(1).setHeaderValue("FromID");
            jTable1.getTableHeader().getColumnModel().getColumn(2).setHeaderValue("toID");
            jTable1.getTableHeader().getColumnModel().getColumn(3).setHeaderValue("Amount");
            jTable1.getTableHeader().getColumnModel().getColumn(4).setHeaderValue("Date");
            jTable1.getTableHeader().getColumnModel().getColumn(5).setHeaderValue("Time");
            dtm =(DefaultTableModel)jTable1.getModel();
            
                sql = "SELECT * FROM tranDetail";
                ps = dbconnection2.getConnection().prepareStatement(sql);
                rs = ps.executeQuery();
                while(rs.next()){
                    dtm.addRow(new Object[]{
                        rs.getString("TranId"),
                        rs.getString("FromID"),
                        rs.getString("toID"),
                        rs.getString("Amount"),
                        rs.getString("Date"),
                        rs.getString("Time"),
                    });
                }
            }
            catch (SQLException ex) {
                ex.printStackTrace();
            }
    }

    private void search() {
        String s = seTF.getText();
        try{
            dtm.setColumnCount(6);
            jTable1.getTableHeader().getColumnModel().getColumn(0).setHeaderValue("TranID");
            jTable1.getTableHeader().getColumnModel().getColumn(1).setHeaderValue("FromID");
            jTable1.getTableHeader().getColumnModel().getColumn(2).setHeaderValue("toID");
            jTable1.getTableHeader().getColumnModel().getColumn(3).setHeaderValue("Amount");
            jTable1.getTableHeader().getColumnModel().getColumn(4).setHeaderValue("Date");
            jTable1.getTableHeader().getColumnModel().getColumn(5).setHeaderValue("Time");
            dtm =(DefaultTableModel)jTable1.getModel();
            dtm.setRowCount(0);
                sql = "SELECT * FROM tranDetail WHERE TranId LIKE '"+s+"' OR fromID LIKE '%"+s+"%' OR toID LIKE '%"+s+"%' OR Amount LIKE '%"+s+"%' OR Date LIKE '%"+s+"%' OR Time LIKE '%"+s+"%'";
                ps = dbconnection2.getConnection().prepareStatement(sql);
                rs = ps.executeQuery();
                while(rs.next()){
                    dtm.addRow(new Object[]{
                        rs.getString("TranId"),
                        rs.getString("FromID"),
                        rs.getString("toID"),
                        rs.getString("Amount"),
                        rs.getString("Date"),
                        rs.getString("Time"),
                    });
                }
            }
            catch (SQLException ex) {
                ex.printStackTrace();
            }
    }

    private void filter() {
        String y = yearCBN.getSelectedItem().toString();;
        String m = monCBN.getSelectedItem().toString();;
        String d = dayCBN.getSelectedItem().toString();;
        int a = m.length();
        int b = d.length();
        if(a==1){
            m = "0"+m;
        }
        if(b==1){
            d = "0"+d;
        }
        try{
            dtm.setColumnCount(6);
            jTable1.getTableHeader().getColumnModel().getColumn(0).setHeaderValue("TranID");
            jTable1.getTableHeader().getColumnModel().getColumn(1).setHeaderValue("FromID");
            jTable1.getTableHeader().getColumnModel().getColumn(2).setHeaderValue("toID");
            jTable1.getTableHeader().getColumnModel().getColumn(3).setHeaderValue("Amount");
            jTable1.getTableHeader().getColumnModel().getColumn(4).setHeaderValue("Date");
            jTable1.getTableHeader().getColumnModel().getColumn(5).setHeaderValue("Time");
            dtm =(DefaultTableModel)jTable1.getModel();
            dtm.setRowCount(0);
                sql = "SELECT * FROM tranDetail WHERE DATE='"+y+"-"+m+"-"+d+"'";
                System.out.println(sql);
                ps = dbconnection2.getConnection().prepareStatement(sql);
                rs = ps.executeQuery();
                while(rs.next()){
                    dtm.addRow(new Object[]{
                        rs.getString("TranId"),
                        rs.getString("FromID"),
                        rs.getString("toID"),
                        rs.getString("Amount"),
                        rs.getString("Date"),
                        rs.getString("Time"),
                    });
                }
                search();
            }
            catch (SQLException ex) {
                ex.printStackTrace();
            }
    }
}
